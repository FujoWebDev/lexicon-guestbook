---
// To fetch a user data we first extract its DID from the page URL.
// This is an unchanging identifier of this specific user across
// the whole ATproto network.
const { partialDid } = Astro.params;
import { AtUri } from "@atproto/syntax";
import CreateGuestbookForm from "../../../components/CreateGuestbookForm.astro";
import { didToHandle, getGuestbookAgent } from "../../lib/atproto";
import Layout from "../../../layouts/Layout.astro";

const ownerDid = "did:" + partialDid;
const ownerHandle = await didToHandle(ownerDid);

const guestbookAgent = await getGuestbookAgent(Astro.locals);
const guestbooks = await guestbookAgent.com.fujocoded.guestbook.getGuestbooks({
  ownerDid,
});

if (!guestbooks.success) {
  throw new Error(`There was an error fetching the data for ${ownerDid}`);
}
---

<Layout>
  <div>
    <h2>
      @{ownerHandle}'s Guestbooks! (<a href={`https://pdsls.dev/at/${ownerDid}`}
        >pdsls</a
      >)
    </h2>
    <ul>
      {
        guestbooks.data.guestbooks.map((guestbook) => {
          const guestbookAtUri = new AtUri(guestbook.atUri);
          return (
            <li>
              <div>
                <a
                  href={`guestbook/${ownerDid}/${guestbookAtUri.collection}/${guestbookAtUri.rkey}`}
                >
                  {guestbook.title ??
                    `${guestbookAtUri.collection}/${guestbookAtUri.rkey}`}
                </a>
                (submissions: {guestbook.submissionsCount ?? "N/A"}
                {!!guestbook.hiddenSubmissionsCount && (
                  <Fragment>
                    â€” {guestbook.hiddenSubmissionsCount} hidden
                  </Fragment>
                )}
                )
              </div>
              <div style="color:gray; font-size:smaller">{guestbook.atUri}</div>
            </li>
          );
        })
      }
    </ul>
    {
      Astro.locals.loggedInUser && (
        <Fragment>
          <h3>Create new guestbook</h3>
          <CreateGuestbookForm />
        </Fragment>
      )
    }
  </div>
</Layout>
