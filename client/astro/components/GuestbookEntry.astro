---
import type { AtUri } from "@atproto/api";
import type { SubmissionView } from "../../generated/api/types/com/fujocoded/guestbook/defs";
import { actions } from "astro:actions";

interface Props extends SubmissionView {
  guestbookAtUri: AtUri;
}

const { author, text, createdAt, atUri, guestbookAtUri } = Astro.props;

const loggedInUserDid = Astro.locals.loggedInUser?.did;
const authorLink = author.handle
  ? author.handle
  : `https://pdsls.dev/at/${author.did}`;

const deleteSubmissionResult = Astro.getActionResult(actions.deleteSubmission);
const hideSubmissionResult = Astro.getActionResult(actions.hideSubmission);

const body = await Astro.request.clone().formData();
const actionSubmissionAtUri = body.get("atUri").valueOf();
---

<article>
  <img src={author.avatar} />
  <span>
    <a class="author" href={authorLink}>@{author.handle ?? author.did}</a>
    says:</span
  >
  <p class="text">{text}</p>
  <div class="aturi">{atUri}</div>
  <datetime>
    {
      new Date(createdAt).toLocaleString(undefined, {
        dateStyle: "medium",
        timeStyle: "short",
      })
    }
  </datetime>
  {
    loggedInUserDid === author.did && (
      <div>
        <form method="POST" action={actions.deleteSubmission}>
          <input name="atUri" type="hidden" value={atUri} />
          <button type="submit">Delete entry</button>
        </form>
        {actionSubmissionAtUri == atUri && deleteSubmissionResult?.error && (
          <p class="error">{deleteSubmissionResult.error.message}</p>
        )}
      </div>
    )
  }
  {
    loggedInUserDid && loggedInUserDid !== author.did && (
      <div>
        <form method="POST" action={actions.hideSubmission}>
          <input name="atUri" type="hidden" value={atUri} />
          <input
            name="guestbookAtUri"
            type="hidden"
            value={guestbookAtUri.toString()}
          />
          <button type="submit">Hide entry</button>
        </form>
        {actionSubmissionAtUri == atUri && hideSubmissionResult?.error && (
          <p class="error">{hideSubmissionResult.error.message}</p>
        )}
      </div>
    )
  }

  <style>
    article {
      background-color: #a2e3c3;
      padding-inline: 2rem;
      padding-block: 1rem;
      border-radius: 1.6rem;
      display: flex;
      flex-direction: column;
    }
    img {
      width: 2.5rem;
      height: auto;
      border-radius: 100%;
    }
    div:has(span > .author) {
      display: flex;
      gap: 0.5rem;
      align-items: center;
    }
    p {
      padding-block: 1rem;
      padding-inline: 2rem;
      background-color: hsl(150 54% 83% / 1);
      border-radius: 1rem;
    }
    datetime {
      display: block;
      text-align: right;
      font-size: 1rem;
    }
    .aturi {
      font-size: small;
      color: gray;
    }
  </style>
</article>
