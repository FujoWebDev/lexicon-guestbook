---
// To fetch a user data we first extract its DID from the page URL.
// This is an unchanging identifier of this specific user across
// the whole ATproto network.
const { partialDid } = Astro.params;
import { AtUri } from "@atproto/syntax";
import CreateGuestbookForm from "../../../components/CreateGuestbookForm.astro";
import { didToHandle, getGuestbookAgent } from "../../lib/atproto";
import Layout from "../../../layouts/Layout.astro";
import { actions } from "astro:actions";

const ownerDid = "did:" + partialDid;
const ownerHandle = await didToHandle(ownerDid);

const guestbookAgent = await getGuestbookAgent(Astro.locals);
const guestbooks = await guestbookAgent.com.fujocoded.guestbook.getGuestbooks({
  ownerDid,
});

if (!guestbooks.success) {
  throw new Error(`There was an error fetching the data for ${ownerDid}`);
}

const result = Astro.getActionResult(actions.deleteGuestbook);
---

<Layout>
  <div>
    <h2>
      @{ownerHandle}'s Guestbooks! (<a href={`https://pdsls.dev/at/${ownerDid}`}
        >pdsls</a
      >)
    </h2>
    {
      result?.error && (
        <div>
          There was an error deleting your guestbook: {result.error.message}
        </div>
      )
    }
    <ul>
      {
        guestbooks.data.guestbooks.map((guestbook) => {
          const guestbookAtUri = new AtUri(guestbook.atUri);
          return (
            <li>
              <div>
                <div>
                  <a
                    href={`guestbook/${ownerDid}/${guestbookAtUri.collection}/${guestbookAtUri.rkey}`}
                  >
                    {guestbook.title ??
                      `${guestbookAtUri.collection}/${guestbookAtUri.rkey}`}
                  </a>
                  (submissions: {guestbook.submissionsCount ?? "N/A"}
                  {!!guestbook.hiddenSubmissionsCount && (
                    <Fragment>
                      â€” {guestbook.hiddenSubmissionsCount} hidden
                    </Fragment>
                  )}
                  )
                </div>
                <div style="color:gray; font-size:smaller">
                  {guestbook.atUri}
                </div>
              </div>
              <button class="deleteButton" data-at-uri={guestbook.atUri}>
                Delete
              </button>
            </li>
          );
        })
      }
    </ul>
    <!-- Find a polyfill for closedby "any" because I tasted it and I refuse to give it up -->
    <dialog class="confirm-delete" closedby="any">
      Do you want to delete this guestbook?
      <form action={actions.deleteGuestbook} method="dialog">
        <input type="hidden" name="atUri" />
        <button value="cancel" autofocus>Cancel</button>
        <input type="submit" formmethod="POST" value="Delete" />
      </form>
    </dialog>
    {
      Astro.locals.loggedInUser && (
        <Fragment>
          <h3>Create new guestbook</h3>
          <CreateGuestbookForm />
        </Fragment>
      )
    }
  </div>
</Layout>

<script>
  const dialog = document.querySelector<HTMLDialogElement>(
    "dialog.confirm-delete"
  );
  const atUriInput = dialog.querySelector<HTMLInputElement>(
    'input[name="atUri"]'
  );
  const deleteButtons =
    document.querySelectorAll<HTMLButtonElement>(".deleteButton");

  for (const deleteButton of deleteButtons) {
    deleteButton.addEventListener("click", (e) => {
      dialog.showModal();
      const atUri = deleteButton.dataset.atUri;
      atUriInput.value = atUri;
    });
  }
</script>

<style>
  li button {
    visibility: hidden;
  }

  li:hover button {
    visibility: visible;
  }

  li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
  }

  ul {
    width: max-content;
  }
</style>
