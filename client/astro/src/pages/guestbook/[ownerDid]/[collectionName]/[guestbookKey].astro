---
// To fetch a guestbook we extract the components of its
// AtUri from the page URL. We then use the AtUri to ask our
// AppView server for the guestbook data.
const { ownerDid, collectionName, guestbookKey } = Astro.params;
import { actions } from "astro:actions";
import { AtUri } from "@atproto/syntax";
import { getGuestbookAgent } from "../../../../lib/atproto";
import GuestbookEntry from "../../../../../components/GuestbookEntry.astro";
import Layout from "../../../../../layouts/Layout.astro";

const guestbookAtUri = AtUri.make(ownerDid, collectionName, guestbookKey);

const guestbookResponse =
  // The guestbook agent is our authenticated client that knows how to fetch
  // data for our guestbook from an AppView that implements the fujocoded
  // guestbook data-fetching endpoints.
  // In this case, we use the "com.fujocoded.guestbook.getGuestbook" method
  // to get the guestbook data, passing its AtUri as a parameter.
  await getGuestbookAgent().com.fujocoded.guestbook.getGuestbook({
    guestbookAtUri: guestbookAtUri.toString(),
  });

if (!guestbookResponse.success) {
  throw new Error("Problem with the guestbook");
}

const guestbookData = guestbookResponse.data;
const result = Astro.getActionResult(actions.postToGuestbook);
---

<Layout>
  {!!guestbookData?.title && <h1>{guestbookData?.title}</h1>}
  <div>
    A guestbook for <a href={`https://${guestbookData.owner.handle}`}>
      @{guestbookData.owner.handle}</a
    > (<a href={`/${guestbookData.owner.did}`}>see all</a>)
  </div>
  <div class="submissions">
    {!guestbookData?.submissions.length && <div>This guestbook is empty.</div>}
    {
      guestbookData?.submissions.map((submission) => (
        <GuestbookEntry {...submission} />
      ))
    }
    {
      Astro.locals.loggedInClient && (
        <form method="POST" action={actions.postToGuestbook}>
          <input name="text" type="text" placeholder="your text" />
          <input
            name="postedTo"
            value={guestbookAtUri.toString()}
            type="hidden"
          />

          <button type="submit">Submit</button>
          {result?.error && <p class="error">{result.error.message}</p>}
          {result?.data && <div>{result.data}</div>}
        </form>
      )
    }
  </div>
</Layout>

<style>
  h1 {
    margin-bottom: 10px;
  }
  .submissions {
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
</style>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  const form = document.querySelector("form");
  //   form?.addEventListener("submit", async (event) => {
  //     event.preventDefault();
  //     const formData = new FormData(form);
  //     const { error } = await actions.postToGuestbook(formData);
  //     if (!error) navigate("");
  //   });
</script>
